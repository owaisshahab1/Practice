<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>